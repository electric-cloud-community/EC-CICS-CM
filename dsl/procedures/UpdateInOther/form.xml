<!--

     Copyright 2016 Electric Cloud, Inc.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->
<!--
Each form element represents a procedure parameter. 
The corresponding procedure parameters will be created automatically when 
the plugin in installed and promoted.

formElement nested elements:
============================
property:   formal parameter name
type    :   entry|textarea|checkbox|select|radio|credential
label   :   String-type. Parameter label value
required:   1|0
value   : Parameter default value
documentation : Help text for the parameter
-->
<editor>
    <formElement>
        <type>entry</type>
        <label>Configuration name:</label>
        <property>configurationName</property>
        <propertyReference>/plugins/@PLUGIN_NAME@/project/ec_plugin_cfgs</propertyReference>
        <required>1</required>
        <documentation>The EC-CICS-CM configuration to use.</documentation>
    </formElement>
    <formElement>
        <type>entry</type>
        <label>Output Property:</label>
        <property>outputProperty</property>
        <required>1</required>
        <documentation>The property that results will be returned into.</documentation>
    </formElement>
    <formElement>
        <type>entry</type>
        <label>Location Name:</label>
        <property>LocationName</property>
        <required>1</required>
        <documentation>Name of location to create in</documentation>
    </formElement>
    <formElement>
        <type>select</type>
        <label>Location Type:</label>
        <property>LocationType</property>
        <required>1</required>
        <documentation>Location to update in (to update in the Repository, use procedure UpdateInRepository instead)</documentation>
        <option>
            <name>CICS Configuration</name>
            <value>CConfig</value>
        </option>
        <option>
            <name>Context</name>
            <value>Context</value>
        </option>
        <option>
            <name>CSD</name>
            <value>CSD</value>
        </option>
        <option>
            <name>Repository</name>
            <value>Repository</value>
        </option>
        <value>CConfig</value>
    </formElement>
    <formElement>
        <type>entry</type>
        <label>Object Type:</label>
        <property>ObjType</property>
        <required>1</required>
        <documentation>Object to create: resource type</documentation>
    </formElement>
    <formElement>
        <type>entry</type>
        <label>Integrity Token:</label>
        <property>IntegrityToken</property>
        <required>0</required>
        <documentation>Object to delete: object integrity token (optional, ignored if more than one object is specified or wildcard masking is used for objects)</documentation>
    </formElement>
    <formElement>
        <type>entry</type>
        <label>CSYSDEF Model:</label>
        <property>CSYSDEFModel</property>
        <required>0</required>
        <documentation>Applies only to CSYSDEF objects and is optional.</documentation>
    </formElement>
    <formElement>
        <type>entry</type>
        <label>Data's Object Type:</label>
        <property>DataObjType</property>
        <required>0</required>
        <documentation> Specifying this "wrapper" element allows you to use the supplied schema to validate the contents of the 'ObjectData' element for that object type</documentation>
    </formElement>
    <formElement>
        <type>textarea</type>
        <label>Name-Value Pairs:</label>
        <property>ObjectData</property>
        <required>1</required>
        <documentation>Name-value pairs to set in the object being updated, one per line in NAME=VALUE format</documentation>
    </formElement>
</editor>
